// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/typescript-node
{
  "name": "Node.js & TypeScript",
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  "image": "mcr.microsoft.com/devcontainers/typescript-node:1-20-bookworm",
  "customizations": {
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "[javascript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "editor.formatOnSave": true
      },
      "extensions": [
        "dbaeumer.vscode-eslint",
        "amodio.tsl-problem-matcher",
        "ms-vscode.extension-test-runner",
        "ms-azuretools.vscode-docker",
        "spmeesseman.vscode-taskexplorer",
        "yzhang.markdown-all-in-one",
        "esbenp.prettier-vscode",
        "angular.ng-template"
      ]
    }
  },
  // Features to add to the dev container. More info: https://containers.dev/features.
  // "features": {},
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // Enable to connect the dev container to the host network, needed in case of WSL with networkingMode=mirrored
  "runArgs": ["--network=host"],
  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "bash ./.devcontainer/postCreateCommand.sh"
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root"
}
