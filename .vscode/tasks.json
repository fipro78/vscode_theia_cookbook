// See https://go.microsoft.com/fwlink/?LinkId=733558
// for the documentation about the tasks.json format
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Watch Extensions",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "dependsOn": [
        "VS Code Extension Watch",
        "Angular Extension Watch",
        "React Extension Watch",
        "Copilot Extension Watch"
      ]
    },
    {
      "label": "Terminate Tasks",
      "command": "echo ${input:terminate}",
      "type": "shell",
      "problemMatcher": [],
      "presentation": {
        "reveal": "never",
        "close": true
      }
    },
    {
      "label": "VS Code Extension Watch",
      "type": "shell",
      "command": "npm run watch",
      "problemMatcher": "$tsc-watch",
      "isBackground": true,
      "presentation": {
        "reveal": "never"
      },
      "group": {
        "kind": "build"
      },
      "options": {
        "cwd": "${workspaceFolder}/vscode-extension"
      }
    },
    {
      "label": "Copilot Extension Watch",
      "type": "shell",
      "command": "npm run watch",
      "problemMatcher": "$tsc-watch",
      "isBackground": true,
      "presentation": {
        "reveal": "never"
      },
      "group": {
        "kind": "build"
      },
      "options": {
        "cwd": "${workspaceFolder}/copilot-extension"
      }
    },
    {
      "label": "Angular Extension Watch",
      "type": "shell",
      "command": "npm run watch",
      "problemMatcher": {
        "base": "$tsc-watch",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "bundle generation complete"
          }
        }
      },
      "isBackground": true,
      "presentation": {
        "reveal": "never"
      },
      "group": {
        "kind": "build"
      },
      "options": {
        "cwd": "${workspaceFolder}/angular-extension"
      }
    },
    {
      "label": "React Extension Watch",
      "type": "shell",
      "command": "npm run watch",
      "problemMatcher": {
        "base": "$tsc-watch",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "built in \\d*ms"
          }
        }
      },
      "isBackground": true,
      "presentation": {
        "reveal": "never"
      },
      "group": {
        "kind": "build"
      },
      "options": {
        "cwd": "${workspaceFolder}/react-extension"
      }
    },
    {
      "type": "npm",
      "script": "start",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "bundle generation complete"
          }
        }
      },
      "options": {
        "cwd": "${workspaceFolder}/angular-extension/webview-ui"
      }
    },
    {
      "type": "npm",
      "script": "test",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "bundle generation complete"
          }
        }
      },
      "options": {
        "cwd": "${workspaceFolder}/angular-extension/webview-ui"
      }
    },
    {
      "type": "npm",
      "script": "dev",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "VITE v(.*)  ready in \\d* ms"
          }
        }
      },
      "options": {
        "cwd": "${workspaceFolder}/react-extension/webview-ui"
      }
    },
    {
      "label": "Build Theia Browser",
      "type": "npm",
      "script": "build:browser",
      "isBackground": true,
      "group": "build",
      "options": {
        "cwd": "${workspaceFolder}/theia"
      }
    },
    {
      "label": "Start Theia Browser",
      "type": "npm",
      "script": "start:browser",
      "isBackground": true,
      "options": {
        "cwd": "${workspaceFolder}/theia"
      }
    },
    {
      "label": "Watch Theia Browser",
      "type": "npm",
      "script": "watch:browser",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "browser-app: webpack (.*?) compiled successfully"
          }
        }
      },
      "options": {
        "cwd": "${workspaceFolder}/theia"
      }
    },
    {
      "label": "Watch and Start Theia Browser",
      "dependsOrder": "sequence",
      "dependsOn": ["Watch Theia Browser", "Start Theia Browser"],
      "problemMatcher": []
    },
    {
      "label": "Build Theia Electron",
      "type": "npm",
      "script": "build:electron",
      "isBackground": true,
      "group": "build",
      "options": {
        "cwd": "${workspaceFolder}/theia"
      }
    },
    {
      "label": "Start Theia Electron",
      "type": "npm",
      "script": "start:electron",
      "isBackground": true,
      "options": {
        "cwd": "${workspaceFolder}/theia"
      }
    },
    {
      "label": "Watch Theia Electron",
      "type": "npm",
      "script": "watch:electron",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "electron-app: webpack (.*?) compiled successfully"
          }
        }
      },
      "options": {
        "cwd": "${workspaceFolder}/theia"
      }
    },
    {
      "label": "Watch and Start Theia Electron",
      "dependsOrder": "sequence",
      "dependsOn": ["Watch Theia Electron", "Start Theia Electron"],
      "problemMatcher": []
    }
  ],
  "inputs": [
    {
      "id": "terminate",
      "type": "command",
      "command": "workbench.action.tasks.terminate",
      "args": "terminateAll"
    }
  ]
}
